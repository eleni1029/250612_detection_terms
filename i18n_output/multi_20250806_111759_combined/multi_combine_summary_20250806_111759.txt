多語言檔案合併處理摘要報告
生成時間：2025-08-06 11:17:59
============================================================

目標檔案：
  JSON: i18n_combine/enterprise.json
  PO: i18n_combine/messages_enterprise.po

處理的語言：
  - zh-TW

業態：public_sector
合併數量：0
跳過數量：0
語言統計：

----------------------------------------

業態：enterprises
合併數量：811
跳過數量：339
語言統計：
  zh-TW: 合併 730, 跳過 10, 衝突 0
  zh-TW: 合併 81, 跳過 329, 衝突 0

----------------------------------------

業態：training_institutions
合併數量：0
跳過數量：0
語言統計：

----------------------------------------

處理總結：
成功業態：3
失敗業態：0
總合併項目：811
總跳過項目：339
總錯誤項目：0
處理語言數：1

成功的業態：public_sector, enterprises, training_institutions

多語言合併說明：
- 本次處理支援多個語言的 tobemodified 合併
- JSON 檔案：採用多語言結構，所有語言合併到同一檔案
- PO 檔案：每個語言生成獨立的 PO 檔案（如 messages_zh_TW_rt.po）
- 自動檢測並處理語言層級的路徑映射
- 按業態分別處理，避免業態間相互干擾
- 相同 key 且相同 value 的項目會自動跳過
- 不同 value 的項目會正常更新
- 沒有目標檔案時會自動創建標準檔案（JSON/PO）

v1.6 版本功能 - 智能陣列處理：
- 檢測陣列索引路徑（如 slogan[1]）並自動進行完整陣列更新
- 從 i18n_input/{language}/{language}.json 讀取原始完整陣列
- 只替換指定索引的元素，保持其他元素不變
- 避免陣列部分更新導致其他位置變成 null 的問題
- 支援嵌套陣列路徑（如 data.items[0].tags[2]）
- 當無法獲取原始陣列時，自動降級為傳統索引更新
- 非陣列索引路徑仍使用原有的更新邏輯

v1.7 版本新增功能 - 智能檔案生成：
- 自動檢測 JSON 檔案是否包含實際內容
- 只有在有實際更新或有意義的新內容時才生成 JSON 檔案
- 避免生成空的或僅包含空結構的 JSON 檔案
- PO 檔案仍按原有邏輯處理，不受此功能影響
- 提供清晰的跳過檔案統計和日誌記錄

使用建議：
- 確認目標 JSON 檔案採用多語言結構（頂層為語言代碼）
- PO 檔案會按語言分別生成，便於獨立管理各語言翻譯
- 合併前建議備份原始檔案
- 合併後請測試翻譯檔案的正確性
- 檢查各語言檔案的數據完整性
- 新建的檔案包含標準結構，無預設範例
- 確保 i18n_input 目錄包含各語言的原始 JSON 檔案以支援陣列更新
- 陣列索引更新會自動從原始檔案讀取完整陣列進行智能合併
- 如果 JSON 檔案被跳過，表示該業態沒有實際的更新內容
